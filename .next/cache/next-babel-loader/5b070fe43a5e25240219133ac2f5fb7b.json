{"ast":null,"code":"var _jsxFileName = \"/Users/braydenpaley/Documents/CapstoneWebsite/TrailCamWebsite/pages/main/homePage.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Layout from '../../components/homeLayout';\nimport { AppBar } from '@material-ui/core';\nimport styles from '../../components/layout.module.css';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport utilStyles from '../../styles/utils.module.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Divider from '@material-ui/core/Divider';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport StarRateIcon from '@material-ui/icons/StarRate';\nimport ShareIcon from '@material-ui/icons/Share';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport InfoIcon from '@material-ui/icons/Info';\nexport async function getStaticProps() {\n  images = pictureData(myHeaders);\n  return {\n    props: {\n      images\n    }\n  };\n}\nconst classes = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3)\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  gridRoot: {\n    width: 200,\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 2000,\n    height: 450\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\nconst testImage = '/images/profile.jpeg';\n\nconst pictureData = async headers => {\n  var res = await fetch('http://localhost:8080/pictures', {\n    method: 'GET',\n    headers: headers,\n    mode: 'cors'\n  });\n  res = await res.json();\n  return getTileData(res);\n};\n\nfunction getTileData(res) {\n  if (res.status === 'success') {\n    return res.images;\n  } else {\n    return 'bad';\n  }\n}\n\nexport default function HomePage() {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(AppBar, {\n    className: utilStyles.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    style: {\n      flex: 1\n    },\n    variant: \"h6\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Home Page\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    onClick: () => {},\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, \" Log out\")))))), __jsx(Drawer, {\n    className: utilStyles.drawer,\n    variant: \"permanent\",\n    anchor: \"left\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, __jsx(ListItem, {\n    button: true,\n    key: \"New Pictures\",\n    onClick: () => {\n      const myHeaders = new Headers();\n      myHeaders.append('Authorization', 'Bearer ' + localStorage.getItem('Authorization'));\n      tileData = pictureData(myHeaders);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, __jsx(MailIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  })), __jsx(ListItemText, {\n    primary: \"New Pictures\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  })), __jsx(ListItem, {\n    button: true,\n    key: \"Saved\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, __jsx(StarRateIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  })), __jsx(ListItemText, {\n    primary: \"Saved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  })), __jsx(ListItem, {\n    button: true,\n    key: \"Share\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, __jsx(ShareIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  })), __jsx(ListItemText, {\n    primary: \"Share\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  })), __jsx(ListItem, {\n    button: true,\n    key: \"Stats\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, __jsx(EqualizerIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  })), __jsx(ListItemText, {\n    primary: \"Stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, __jsx(ListItem, {\n    button: true,\n    key: \"All Pictures\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, __jsx(InboxIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  })), __jsx(ListItemText, {\n    primary: \"All Pictures\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  })), __jsx(ListItem, {\n    button: true,\n    key: \"Deleted\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, __jsx(DeleteForeverIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  })), __jsx(ListItemText, {\n    primary: \"Deleted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, __jsx(ListItem, {\n    button: true,\n    key: \"Add Device\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  })), __jsx(ListItemText, {\n    primary: \"Add Device\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  })), __jsx(ListItem, {\n    button: true,\n    key: \"Remove Device\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, __jsx(RemoveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  })), __jsx(ListItemText, {\n    primary: \"Remove Device\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }))))), __jsx(\"div\", {\n    className: classes.gridRoot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, __jsx(GridList, {\n    cellHeight: 180,\n    cols: 3,\n    className: classes.gridList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, __jsx(GridListTile, {\n    key: \"Subheader\",\n    cols: 3,\n    style: {\n      height: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, __jsx(ListSubheader, {\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, \"Photos\")), this.props.images.map(tile => __jsx(GridListTile, {\n    key: tile.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: tile.img,\n    alt: tile.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }), __jsx(GridListTileBar, {\n    title: tile.title,\n    subtitle: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 27\n      }\n    }, \"by: \", tile.author),\n    actionIcon: __jsx(IconButton, {\n      \"aria-label\": `info about ${tile.title}`,\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }\n    }, __jsx(InfoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/braydenpaley/Documents/CapstoneWebsite/TrailCamWebsite/pages/main/homePage.js"],"names":["Link","Head","Layout","AppBar","styles","Toolbar","Typography","Button","utilStyles","IconButton","MenuIcon","Divider","MailIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","Drawer","List","makeStyles","DeleteForeverIcon","StarRateIcon","ShareIcon","EqualizerIcon","AddIcon","RemoveIcon","GridList","GridListTile","ListSubheader","GridListTileBar","InfoIcon","getStaticProps","images","pictureData","myHeaders","props","classes","theme","root","display","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","padding","spacing","drawerPaper","width","drawerWidth","gridRoot","flexWrap","justifyContent","overflow","paper","gridList","height","icon","color","testImage","headers","res","fetch","method","mode","json","getTileData","status","HomePage","appBar","flex","drawer","Headers","append","localStorage","getItem","tileData","map","tile","img","title","author"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport Head from 'next/head'\nimport Layout from '../../components/homeLayout'\nimport { AppBar } from '@material-ui/core'\nimport styles from '../../components/layout.module.css'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button'\nimport utilStyles from '../../styles/utils.module.css'\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Divider from '@material-ui/core/Divider';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport StarRateIcon from '@material-ui/icons/StarRate';\nimport ShareIcon from '@material-ui/icons/Share';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport InfoIcon from '@material-ui/icons/Info';\n\n\nexport async function getStaticProps() {\n  \n\n  images = pictureData(myHeaders);\n  return {\n    props: {\n      images,\n    },\n  }\n}\n\n\nconst classes = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  }, drawerPaper: {\n    width: drawerWidth,\n  },\n  gridRoot: {\n    width: 200,\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 2000,\n    height: 450,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  }\n}));\n\nconst testImage = '/images/profile.jpeg';\n\n\n\nconst pictureData = async(headers) => {\n  var res = await fetch('http://localhost:8080/pictures', {\n    method: 'GET',\n    headers: headers,\n    mode: 'cors'\n  });\n  res = await res.json();\n  return getTileData(res);\n}\n\nfunction getTileData(res){\n  if (res.status === 'success'){\n    return res.images;\n  } else {\n    return 'bad'\n  }\n}\n\n\nexport default function HomePage() {\n\n  return (\n    <Layout>\n      <div className={classes.root}>\n        <AppBar className={utilStyles.appBar}>\n          <Toolbar className={classes.toolbar}>\n            <Typography style={{ flex: 1 }} variant=\"h6\" noWrap>\n              Home Page\n            </Typography>\n            <div>\n              <Link href=\"/\" >\n                <div>\n                  <Button onClick={() => { }} variant=\"contained\"> Log out</Button>\n                </div>\n              </Link>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={utilStyles.drawer}\n          variant=\"permanent\"\n          anchor=\"left\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <Divider />\n          <List>\n            <ListItem button key= 'New Pictures' onClick={() => {\n              const myHeaders = new Headers();\n              myHeaders.append('Authorization', 'Bearer ' + localStorage.getItem('Authorization'));\n              tileData = pictureData(myHeaders);\n\n            }}>\n              <ListItemIcon>\n                <MailIcon/>\n                \n              </ListItemIcon>\n              <ListItemText primary='New Pictures'/>\n            </ListItem>\n            <ListItem button key= 'Saved' onClick={() => {\n            }}>\n              <ListItemIcon>\n                <StarRateIcon/>\n                \n              </ListItemIcon>\n              <ListItemText primary='Saved'/>\n            </ListItem>\n            <ListItem button key= 'Share' onClick={() => {\n            }}>\n              <ListItemIcon>\n                <ShareIcon/>\n                \n              </ListItemIcon>\n              <ListItemText primary='Share'/>\n            </ListItem>\n            <ListItem button key= 'Stats' onClick={() => {\n            }}>\n              <ListItemIcon>\n                <EqualizerIcon/>\n              </ListItemIcon>\n              <ListItemText primary='Stats'/>\n            </ListItem>\n          </List>\n          <Divider />\n          <List>\n            <ListItem button key= 'All Pictures' onClick={() => {\n            }}>\n              <ListItemIcon>\n                <InboxIcon/>\n              </ListItemIcon>\n              <ListItemText primary='All Pictures'/>\n            </ListItem>\n            <ListItem button key= 'Deleted' onClick={() => {\n            }}>\n              <ListItemIcon>\n                <DeleteForeverIcon/>\n              </ListItemIcon>\n              <ListItemText primary='Deleted'/>\n            </ListItem>\n          </List>\n          <Divider />\n          <List>\n          <ListItem button key= 'Add Device' onClick={() => {\n            }}>\n              <ListItemIcon>\n                <AddIcon/>\n              </ListItemIcon>\n              <ListItemText primary='Add Device'/>\n            </ListItem>\n            <ListItem button key= 'Remove Device' onClick={() => {\n            }}>\n              <ListItemIcon>\n                <RemoveIcon/>\n              </ListItemIcon>\n              <ListItemText primary='Remove Device'/>\n            </ListItem>\n          </List>\n        </Drawer>\n      </div>\n      <div className={classes.gridRoot}>\n        <GridList cellHeight={180} cols={3} className={classes.gridList}>\n          <GridListTile key=\"Subheader\" cols={3} style={{ height: 'auto' }}>\n            <ListSubheader component=\"div\">Photos</ListSubheader>\n          </GridListTile>\n          {this.props.images.map((tile) => (\n            <GridListTile key={tile.img}>\n              <img src={tile.img} alt={tile.title} />\n              <GridListTileBar\n                title={tile.title}\n                subtitle={<span>by: {tile.author}</span>}\n                actionIcon={\n                  <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                    <InfoIcon />\n                  </IconButton>\n                }\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n    </Layout>\n  )\n}"]},"metadata":{},"sourceType":"module"}