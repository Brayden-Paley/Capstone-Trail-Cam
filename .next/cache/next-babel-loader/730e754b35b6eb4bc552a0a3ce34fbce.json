{"ast":null,"code":"var _jsxFileName = \"/Users/braydenpaley/Documents/CapstoneWebsite/TrailCamWebsite/pages/main/homePage.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Layout from '../../components/homeLayout';\nimport { AppBar } from '@material-ui/core';\nimport styles from '../../components/layout.module.css';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport utilStyles from '../../styles/utils.module.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Divider from '@material-ui/core/Divider';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport StarRateIcon from '@material-ui/icons/StarRate';\nimport ShareIcon from '@material-ui/icons/Share';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport InfoIcon from '@material-ui/icons/Info';\n/*export async function getStaticProps() {\n  // Call an external API endpoint to get posts\n  const res = await fetch('http://localhost:8080/pictures')\n  const posts = await res.json()\n\n  // By returning { props: { posts } }, the Blog component\n  // will receive `posts` as a prop at build time\n  return {\n    props: {\n      posts,\n    },\n  }\n}*/\n\nvar classes = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex'\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background[\"default\"],\n      padding: theme.spacing(3)\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    gridRoot: {\n      width: 200,\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      width: 2000,\n      height: 450\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)'\n    }\n  };\n});\nvar testImage = '/images/profile.jpeg';\n/*const login = async (headers) => {\n\nconst pictureData = async(headers) => {\n  fetch('http://localhost:8080/pictures');\n}\nconst tileData = await [pictureData];*/\n\nexport default function HomePage() {\n  var _this = this;\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, __jsx(AppBar, {\n    className: utilStyles.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    style: {\n      flex: 1\n    },\n    variant: \"h6\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Home Page\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {},\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, \" Log out\")))))), __jsx(Drawer, {\n    className: utilStyles.drawer,\n    variant: \"permanent\",\n    anchor: \"left\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, ['New Pictures', 'Saved', 'Share', 'Stats'].map(function (text, index) {\n    return __jsx(ListItem, {\n      button: true,\n      key: text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, __jsx(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, index === 0 ? __jsx(MailIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 46\n      }\n    }) : index === 1 ? __jsx(StarRateIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 75\n      }\n    }) : index === 2 ? __jsx(ShareIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 108\n      }\n    }) : __jsx(EqualizerIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 124\n      }\n    }), \" \"), __jsx(ListItemText, {\n      primary: text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }));\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, ['All Pictures', 'Deleted'].map(function (text, index) {\n    return __jsx(ListItem, {\n      button: true,\n      key: text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, __jsx(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, index % 2 === 0 ? __jsx(InboxIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 50\n      }\n    }) : __jsx(DeleteForeverIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 66\n      }\n    })), __jsx(ListItemText, {\n      primary: text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }));\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, ['Add Device', 'Remove Device'].map(function (text, index) {\n    return __jsx(ListItem, {\n      button: true,\n      key: text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, __jsx(ListItemIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, index % 2 === 0 ? __jsx(AddIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 50\n      }\n    }) : __jsx(RemoveIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 64\n      }\n    })), __jsx(ListItemText, {\n      primary: text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }));\n  })))), __jsx(\"div\", {\n    className: classes.gridRoot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, __jsx(GridList, {\n    cellHeight: 180,\n    cols: 3,\n    className: classes.gridList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, __jsx(GridListTile, {\n    key: \"Subheader\",\n    cols: 3,\n    style: {\n      height: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, __jsx(ListSubheader, {\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Photos\")), tileData.map(function (tile) {\n    return __jsx(GridListTile, {\n      key: tile.img,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: tile.img,\n      alt: tile.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }), __jsx(GridListTileBar, {\n      title: tile.title,\n      subtitle: __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 27\n        }\n      }, \"by: \", tile.author),\n      actionIcon: __jsx(IconButton, {\n        \"aria-label\": \"info about \".concat(tile.title),\n        className: classes.icon,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 19\n        }\n      }, __jsx(InfoIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      })),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }));\n  }))));\n}\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/braydenpaley/Documents/CapstoneWebsite/TrailCamWebsite/pages/main/homePage.js"],"names":["Link","Head","Layout","AppBar","styles","Toolbar","Typography","Button","utilStyles","IconButton","MenuIcon","Divider","MailIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","Drawer","List","makeStyles","DeleteForeverIcon","StarRateIcon","ShareIcon","EqualizerIcon","AddIcon","RemoveIcon","GridList","GridListTile","ListSubheader","GridListTileBar","InfoIcon","classes","theme","root","display","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","padding","spacing","drawerPaper","width","drawerWidth","gridRoot","flexWrap","justifyContent","overflow","paper","gridList","height","icon","color","testImage","HomePage","appBar","flex","drawer","map","text","index","tileData","tile","img","title","author"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAMC,OAAO,GAAGZ,UAAU,CAAC,UAACa,KAAD;AAAA,SAAY;AACrCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL,KAD+B;AAIrCC,IAAAA,OAAO,EAAEH,KAAK,CAACI,MAAN,CAAaD,OAJe;AAKrCE,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE,CADH;AAEPC,MAAAA,eAAe,EAAEP,KAAK,CAACQ,OAAN,CAAcC,UAAd,WAFV;AAGPC,MAAAA,OAAO,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd;AAHF,KAL4B;AASlCC,IAAAA,WAAW,EAAE;AACdC,MAAAA,KAAK,EAAEC;AADO,KATqB;AAYrCC,IAAAA,QAAQ,EAAE;AACRF,MAAAA,KAAK,EAAE,GADC;AAERX,MAAAA,OAAO,EAAE,MAFD;AAGRc,MAAAA,QAAQ,EAAE,MAHF;AAIRC,MAAAA,cAAc,EAAE,cAJR;AAKRC,MAAAA,QAAQ,EAAE,QALF;AAMRX,MAAAA,eAAe,EAAEP,KAAK,CAACQ,OAAN,CAAcC,UAAd,CAAyBU;AANlC,KAZ2B;AAoBrCC,IAAAA,QAAQ,EAAE;AACRP,MAAAA,KAAK,EAAE,IADC;AAERQ,MAAAA,MAAM,EAAE;AAFA,KApB2B;AAwBrCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE;AADH;AAxB+B,GAAZ;AAAA,CAAD,CAA1B;AA6BA,IAAMC,SAAS,GAAG,sBAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE1B,OAAO,CAACE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEzB,UAAU,CAACkD,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAE3B,OAAO,CAACI,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEwB,MAAAA,IAAI,EAAE;AAAR,KAAnB;AAAgC,IAAA,OAAO,EAAC,IAAxC;AAA6C,IAAA,MAAM,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,mBAAM,CAAG,CAA1B;AAA4B,IAAA,OAAO,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,CADF,CAJF,CADF,CADF,EAeE,MAAC,MAAD;AACE,IAAA,SAAS,EAAEnD,UAAU,CAACoD,MADxB;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,MAAM,EAAC,MAHT;AAIE,IAAA,OAAO,EAAE;AACPT,MAAAA,KAAK,EAAEpB,OAAO,CAACa;AADR,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,cAAD,EAAiB,OAAjB,EAA0B,OAA1B,EAAmC,OAAnC,EAA4CiB,GAA5C,CAAgD,UAACC,IAAD,EAAOC,KAAP;AAAA,WAC/C,MAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,GAAG,EAAED,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeC,KAAK,KAAK,CAAV,GAAc,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,GAA6BA,KAAK,KAAK,CAAV,GAAc,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,GAAiCA,KAAK,KAAK,CAAV,GAAc,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,GAA8B,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3G,MADF,EAEE,MAAC,YAAD;AAAc,MAAA,OAAO,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAD+C;AAAA,GAAhD,CADH,CATF,EAiBE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAkBE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,cAAD,EAAiB,SAAjB,EAA4BD,GAA5B,CAAgC,UAACC,IAAD,EAAOC,KAAP;AAAA,WAC/B,MAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,GAAG,EAAED,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeC,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,GAAkC,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjD,CADF,EAEE,MAAC,YAAD;AAAc,MAAA,OAAO,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAD+B;AAAA,GAAhC,CADH,CAlBF,EA0BE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,EA2BE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,YAAD,EAAe,eAAf,EAAgCD,GAAhC,CAAoC,UAACC,IAAD,EAAOC,KAAP;AAAA,WACnC,MAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,GAAG,EAAED,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeC,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,GAAgC,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/C,CADF,EAEE,MAAC,YAAD;AAAc,MAAA,OAAO,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADmC;AAAA,GAApC,CADH,CA3BF,CAfF,CADF,EAqDE;AAAK,IAAA,SAAS,EAAE/B,OAAO,CAACgB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,UAAU,EAAE,GAAtB;AAA2B,IAAA,IAAI,EAAE,CAAjC;AAAoC,IAAA,SAAS,EAAEhB,OAAO,CAACqB,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,GAAG,EAAC,WAAlB;AAA8B,IAAA,IAAI,EAAE,CAApC;AAAuC,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,SAAS,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAIGW,QAAQ,CAACH,GAAT,CAAa,UAACI,IAAD;AAAA,WACZ,MAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAED,IAAI,CAACC,GAAf;AAAoB,MAAA,GAAG,EAAED,IAAI,CAACE,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,eAAD;AACE,MAAA,KAAK,EAAEF,IAAI,CAACE,KADd;AAEE,MAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAWF,IAAI,CAACG,MAAhB,CAFZ;AAGE,MAAA,UAAU,EACR,MAAC,UAAD;AAAY,2CAA0BH,IAAI,CAACE,KAA/B,CAAZ;AAAoD,QAAA,SAAS,EAAEpC,OAAO,CAACuB,IAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADY;AAAA,GAAb,CAJH,CADF,CArDF,CADF;AA6ED;KA9EuBG,Q","sourcesContent":["import Link from 'next/link'\nimport Head from 'next/head'\nimport Layout from '../../components/homeLayout'\nimport { AppBar } from '@material-ui/core'\nimport styles from '../../components/layout.module.css'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button'\nimport utilStyles from '../../styles/utils.module.css'\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Divider from '@material-ui/core/Divider';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport StarRateIcon from '@material-ui/icons/StarRate';\nimport ShareIcon from '@material-ui/icons/Share';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport InfoIcon from '@material-ui/icons/Info';\n\n\n/*export async function getStaticProps() {\n  // Call an external API endpoint to get posts\n  const res = await fetch('http://localhost:8080/pictures')\n  const posts = await res.json()\n\n  // By returning { props: { posts } }, the Blog component\n  // will receive `posts` as a prop at build time\n  return {\n    props: {\n      posts,\n    },\n  }\n}*/\n\n\nconst classes = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  }, drawerPaper: {\n    width: drawerWidth,\n  },\n  gridRoot: {\n    width: 200,\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 2000,\n    height: 450,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  }\n}));\n\nconst testImage = '/images/profile.jpeg';\n\n/*const login = async (headers) => {\n\nconst pictureData = async(headers) => {\n  fetch('http://localhost:8080/pictures');\n}\nconst tileData = await [pictureData];*/\n\nexport default function HomePage() {\n  return (\n    <Layout>\n      <div className={classes.root}>\n        <AppBar className={utilStyles.appBar}>\n          <Toolbar className={classes.toolbar}>\n            <Typography style={{ flex: 1 }} variant=\"h6\" noWrap>\n              Home Page\n            </Typography>\n            <div>\n              <Link href=\"/\" >\n                <div>\n                  <Button onClick={() => { }} variant=\"contained\"> Log out</Button>\n                </div>\n              </Link>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={utilStyles.drawer}\n          variant=\"permanent\"\n          anchor=\"left\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <Divider />\n          <List>\n            {['New Pictures', 'Saved', 'Share', 'Stats'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index === 0 ? <MailIcon /> : index === 1 ? <StarRateIcon /> : index === 2 ? <ShareIcon /> : <EqualizerIcon />} </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['All Pictures', 'Deleted'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <DeleteForeverIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['Add Device', 'Remove Device'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <AddIcon /> : <RemoveIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n      </div>\n      <div className={classes.gridRoot}>\n        <GridList cellHeight={180} cols={3} className={classes.gridList}>\n          <GridListTile key=\"Subheader\" cols={3} style={{ height: 'auto' }}>\n            <ListSubheader component=\"div\">Photos</ListSubheader>\n          </GridListTile>\n          {tileData.map((tile) => (\n            <GridListTile key={tile.img}>\n              <img src={tile.img} alt={tile.title} />\n              <GridListTileBar\n                title={tile.title}\n                subtitle={<span>by: {tile.author}</span>}\n                actionIcon={\n                  <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                    <InfoIcon />\n                  </IconButton>\n                }\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n    </Layout>\n  )\n}"]},"metadata":{},"sourceType":"module"}